/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package latihancrud_faizahviafadhillah;

/**
 *
 * @author viaaaa
 */
import Config.KoneksiDB;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

public class FormBiodata extends javax.swing.JFrame {

    /**
     * Creates new form FormBiodata
     */
    private Statement st;
    private ResultSet rs;
    private Connection conn;
    private PreparedStatement pst;
    
    public FormBiodata() {
        initComponents();
        conn = KoneksiDB.getKoneksi();
        tampilData();
    }
    
    private void tampilData() {
        DefaultTableModel kolomtabel = new DefaultTableModel();
        kolomtabel.addColumn("No.");
        kolomtabel.addColumn("Nama");
        kolomtabel.addColumn("NIM");
        kolomtabel.addColumn("TTL");
        kolomtabel.addColumn("Jenis Kelamin");
        kolomtabel.addColumn("Prodi");
        kolomtabel.addColumn("No. Telepon");
        kolomtabel.addColumn("Alamat");
        try {
        int nomor = 1;
        // buat objek statement untuk mengeksekusi query mysql.
        st = conn.createStatement();
        // buat query ke database
        String sql = "Select * FROM tbl_biodata";
        // eksekusi query dan simpan hasilnya di objek ResultSet
        rs = st.executeQuery(sql);
        // tampilkan hasil query menggunakan perulangan while
        while (rs.next()) {
        kolomtabel.addRow(new Object[]{
        ("" + nomor++),
        rs.getString("nama"),
        rs.getString("nim"),
        rs.getString("ttl"),
        rs.getString("jekel"),
        rs.getString("prodi"),
        rs.getString("notelp"),
        rs.getString("alamat"),});
        tbl_biodata.setModel(kolomtabel);
        tbl_biodata.enable(true);
        tfNama.requestFocus();
        }
        } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal menampilkan data.\n" + e.getMessage());
        }
    }
    private void hapusData() {
        int row = tbl_biodata.getSelectedRow();
        if (row == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan di hapus !");
        return;
        }
        int jawab = JOptionPane.showOptionDialog(this,
        "Apakah Anda ingin menghapus data ini?",
        "Konfirmasi",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (jawab == JOptionPane.YES_OPTION) {
        try {
        String sql = "DELETE FROM tbl_biodata WHERE nim='" +
        tfNIM.getText() + "' "; 
        pst = conn.prepareStatement(sql);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil di hapus");
        clearForm();
        tampilData();
        } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
        }
        } else {
        clearForm();
        tampilData();

}

}
    
    private void clearForm() {
    tfNama.setText("");
    tfNIM.setText("");
    tfTTL.setText("");
    buttonGroup1.clearSelection();
    cmbProdi.setSelectedItem("-- Program Studi --");
    tfNomorTelepon.setText("");
    taAlamat.setText("");
    tfNama.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        tfNIM = new javax.swing.JTextField();
        tfTTL = new javax.swing.JTextField();
        rbLaki = new javax.swing.JRadioButton();
        rbPerempuan = new javax.swing.JRadioButton();
        cmbProdi = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAlamat = new javax.swing.JTextArea();
        tfNomorTelepon = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_biodata = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelet = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Biodata");

        jLabel2.setText("Nama Mahasiswa/i :");

        jLabel3.setText("NIM :");

        jLabel4.setText("Tempat dan Tgl.Lahir :");

        jLabel5.setText("Jenis Kelamin :");

        jLabel6.setText("Prodi :");

        jLabel7.setText("Nomor Telp.");

        jLabel8.setText("Alamat :");

        tfNIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNIMActionPerformed(evt);
            }
        });

        tfTTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTTLActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbLaki);
        rbLaki.setText("Laki - laki");

        buttonGroup1.add(rbPerempuan);
        rbPerempuan.setText("Perempuan");
        rbPerempuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPerempuanActionPerformed(evt);
            }
        });

        cmbProdi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Program Studi --", "Teknik Informatika", "Teknik Industri", "Teknik Lingkungan", "Teknik Sipil", " " }));

        taAlamat.setColumns(20);
        taAlamat.setRows(5);
        jScrollPane1.setViewportView(taAlamat);

        tbl_biodata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_biodata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_biodataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_biodata);

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelet.setText("Delete");
        btnDelet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfNIM)
                    .addComponent(tfTTL, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(rbLaki, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(rbPerempuan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbProdi, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfNomorTelepon, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(tfNama))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnSubmit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelet)
                        .addGap(28, 28, 28)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfTTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(rbLaki)
                            .addComponent(rbPerempuan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmbProdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfNomorTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelet)
                    .addComponent(btnClear)
                    .addComponent(btnExit))
                .addGap(79, 79, 79))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNIMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNIMActionPerformed

    private void tfTTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTTLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTTLActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        //membuat validasi form kosong
            if (tfNama.getText().equals("")
            || tfNIM.getText().equals("")
            || tfTTL.getText().equals("")
            || tfNomorTelepon.getText().equals("")
            || taAlamat.getText().equals("")
            || buttonGroup1.isSelected(null)
            || cmbProdi.getSelectedItem().equals("-- Program Studi --")) {
            JOptionPane.showMessageDialog(this, "Field harap di isi !",
            "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
            }
            try {
            String cekDB = "SELECT * FROM tbl_biodata WHERE nim = '" +
            tfNIM.getText() + "' ";
            rs = st.executeQuery(cekDB);
            if (rs.next()) {
            JOptionPane.showMessageDialog(null, "NIM sudah tersedia !");
            } else {
            st = conn.createStatement();
            String jekel;
            if (rbLaki.isSelected()) {
            jekel = "Laki - Laki";
            } else {
            jekel = "Perempuan";
            }
            //aksi simpan data (Submit/Save/Add)
            // String sql = "INSERT INTO tbl_biodata VALUES ('"
            String sql = "INSERT INTO tbl_biodata (nama, nim, ttl, jekel, prodi, notelp, alamat) VALUES ('"
            + tfNama.getText()
            + "', '" + tfNIM.getText()
            + "', '" + tfTTL.getText()
            + "', '" + jekel
            + "', '" + cmbProdi.getSelectedItem()
            + "', '" + tfNomorTelepon.getText()
            + "', '" + taAlamat.getText()
            + "') ";
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Data berhasil di simpan");
            tampilData();
            clearForm();
            }
            } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void rbPerempuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPerempuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPerempuanActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int jawab = JOptionPane.showOptionDialog(this,
        "Apakah Anda Ingin Keluar?",
        "Exit",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (jawab == JOptionPane.YES_OPTION) {
        System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnDeletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletActionPerformed
        // TODO add your handling code here:
        hapusData();
    }//GEN-LAST:event_btnDeletActionPerformed

    private void tbl_biodataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_biodataMouseClicked
        // TODO add your handling code here:
        int row = tbl_biodata.getSelectedRow();
        if (tbl_biodata.getValueAt(row, 4).equals("Laki-laki")) {
        rbLaki.setSelected(true);
        } else if (tbl_biodata.getValueAt(row, 4).equals("Perempuan")) {
        rbPerempuan.setSelected(true);
        }
        tfNama.setText(tbl_biodata.getValueAt(row, 1).toString());
        tfNIM.setText(tbl_biodata.getValueAt(row, 2).toString());
        tfTTL.setText(tbl_biodata.getValueAt(row, 3).toString());
        cmbProdi.setSelectedItem(tbl_biodata.getValueAt(row, 5).toString());
        tfNomorTelepon.setText(tbl_biodata.getValueAt(row, 6).toString());
        taAlamat.setText(tbl_biodata.getValueAt(row, 7).toString());
    }//GEN-LAST:event_tbl_biodataMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        // Ambil nilai dari form
    String nama = tfNama.getText().trim();
    String nim = tfNIM.getText().trim();
    String ttl = tfTTL.getText().trim();
    String jekel = rbLaki.isSelected() ? "Laki-laki" : "Perempuan";
    String prodi = cmbProdi.getSelectedItem().toString();
    String notelp = tfNomorTelepon.getText().trim();
    String alamat = taAlamat.getText().trim();

    // Validasi input
    if (nim.isEmpty() || nama.isEmpty() || ttl.isEmpty() || notelp.isEmpty() || alamat.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Semua field harus diisi!");
        return;
    }

    int row = tbl_biodata.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang akan diupdate!");
        return;
    }
    
    // Cek apakah NIM yang diinputkan ada di database
    try {
        String cekDB = "SELECT * FROM tbl_biodata WHERE nim = '" + nim + "'";
        rs = st.executeQuery(cekDB);
        if (!rs.next()) {
            JOptionPane.showMessageDialog(this, "Data tidak ditemukan.");
            return;
        }

        // Jika data ditemukan, lakukan update
        String sql = "UPDATE tbl_biodata SET nama = ?, ttl = ?, jekel = ?, prodi = ?, notelp = ?, alamat = ? WHERE nim = ?";
        pst = conn.prepareStatement(sql);
        pst.setString(1, nama);
        pst.setString(2, ttl);
        pst.setString(3, jekel);
        pst.setString(4, prodi);
        pst.setString(5, notelp);
        pst.setString(6, alamat);
        pst.setString(7, nim);
        
        int affectedRows = pst.executeUpdate();
        if (affectedRows > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate.");
            tampilData(); // Refresh data
            clearForm(); // Clear the form
        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada perubahan pada data.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBiodata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBiodata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBiodata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBiodata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBiodata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelet;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbProdi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbLaki;
    private javax.swing.JRadioButton rbPerempuan;
    private javax.swing.JTextArea taAlamat;
    private javax.swing.JTable tbl_biodata;
    private javax.swing.JTextField tfNIM;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNomorTelepon;
    private javax.swing.JTextField tfTTL;
    // End of variables declaration//GEN-END:variables
}
